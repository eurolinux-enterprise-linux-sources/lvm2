 WHATS_NEW              | 4 ++++
 lib/device/dev-cache.c | 6 ++++--
 2 files changed, 8 insertions(+), 2 deletions(-)

diff --git a/WHATS_NEW b/WHATS_NEW
index 762c710..f4b4ff5 100644
--- a/WHATS_NEW
+++ b/WHATS_NEW
@@ -1,3 +1,7 @@
+Version 2.02.130 - 
+===================================
+  Fix use of uninitialized device status if reading outdated .cache record.
+
 Version 2.02.127 - 
 =================================
   Fix regression in cache causing some PVs to bypass filters (2.02.105).
diff --git a/lib/device/dev-cache.c b/lib/device/dev-cache.c
index 8709582..8aa1f92 100644
--- a/lib/device/dev-cache.c
+++ b/lib/device/dev-cache.c
@@ -934,6 +934,7 @@ struct device *dev_cache_get(const char *name, struct dev_filter *f)
 {
 	struct stat buf;
 	struct device *d = (struct device *) dm_hash_lookup(_cache.names, name);
+	int info_available = 0;
 
 	if (d && (d->flags & DEV_REGULAR))
 		return d;
@@ -944,7 +945,8 @@ struct device *dev_cache_get(const char *name, struct dev_filter *f)
 			dm_hash_remove(_cache.names, name);
 		log_sys_very_verbose("stat", name);
 		d = NULL;
-	}
+	} else
+		info_available = 1;
 
 	if (d && (buf.st_rdev != d->dev)) {
 		dm_hash_remove(_cache.names, name);
@@ -952,7 +954,7 @@ struct device *dev_cache_get(const char *name, struct dev_filter *f)
 	}
 
 	if (!d) {
-		_insert(name, &buf, 0, obtain_device_list_from_udev());
+		_insert(name, info_available ? &buf : NULL, 0, obtain_device_list_from_udev());
 		d = (struct device *) dm_hash_lookup(_cache.names, name);
 		if (!d) {
 			_full_scan(0);
